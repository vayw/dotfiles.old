set nocompatible
set clipboard=unnamed
syntax on

call plug#begin('~/.vim/plugged')
" enchanced python syntax
Plug 'vim-python/python-syntax'
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'kpron/vim-yaml-helper'
Plug 'vayw/vim-logic-toggle'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-sleuth'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'bronson/vim-trailing-whitespace'
Plug 'google/vim-jsonnet'
call plug#end()

filetype plugin indent on


let python_highlight_all = 1

" NERDtree shortcut
map <C-n> :NERDTreeToggle<CR>

" yaml helper shortcut
nnoremap <F3> :YamlGoToKey<Space>

set t_Co=256

"vmap <C-C> "+yi
"imap <C-V> "+gPi

set mousehide
set termencoding=utf-8

set novisualbell

set modifiable

nmap <F8> :Tags<CR>

" logic-toogle bind
noremap <leader>t :call LogicToggle()<CR>
" call FuzzyFinder
noremap <C-P> :FZF<CR>

" bind Space to reset last search highlightning
nnoremap <Space> :noh<return>

if &term =~ '^screen'
    " tmux will send xterm-style keys when its xterm-keys option is on
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif

" GO
" use goimports for formatting
let g:go_fmt_command = "goimports"

" turn highlighting on
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

let g:syntastic_go_checkers = ['go', 'golint', 'errcheck']

" Open go doc in vertical window, horizontal, or tab
au Filetype go nnoremap <leader>v :vsp <CR>:exe "GoDef" <CR>

if filereadable("$HOME/.vim/local.vim")
    source $HOME/.vim/local.vim
endif
